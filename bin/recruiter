#!/usr/bin/env php
<?php

require __DIR__ . '/../vendor/autoload.php';

use Recruiter\Recruiter;

GracefulDeath::around(function($life) {

    $pid = posix_getpid();
    $options = array_merge(['host' => 'localhost:27017'], getopt('', ['host:']));

    $db = (new MongoClient($options['host']))->selectDB('recruiter');
    $recruiter = new Recruiter($db);

    while (!$life->askedToStop()) {
        $workers = $recruiter->workersAvailableToWork();
        $assignedWorkToSomeWorker = false;
        foreach ($workers->groupByWhatTheyCanDo() as $unit) {
            $pickStartAt = microtime(true);
            $contract = $recruiter->signContractOf(
                $unit
                    ->pickFrom($recruiter->jobsReadyToBeDone())
                    ->assignTo($unit)
            );
            $pickEndAt = microtime(true);
            $numberOfWorkers = count($contract['assignments']);
            $assignedWorkToSomeWorker = $numberOfWorkers > 0;
            $currentMemoryUsage = memory_get_usage();
            printf(
                '[RECRUITER][%d][%s][%s] picked jobs for %d workers in %fms' . PHP_EOL,
                $pid, date('c'), format($currentMemoryUsage), $numberOfWorkers, ($pickEndAt - $pickStartAt) * 1000
            );
        }
        if ($currentMemoryUsage > 314572800) exit(1);
        if (!$assignedWorkToSomeWorker) usleep(1000 * 200);
    }

    printf('[RECRUITER][%d][%s] ok, see you space cowboy...' . PHP_EOL, $pid, date('c'));

})
->doNotCaptureOutput()
->catchSignals([SIGTERM, SIGQUIT, SIGINT])
->reanimationPolicy(function() {
    printf('[RECRUITER-SUPERVISOR][%d][%s] respawn!'. PHP_EOL, posix_getpid(), date('c'));
    return true;
})
->run();


function format($size) {
    $units = array( 'B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB');
    $power = $size > 0 ? floor(log($size, 1024)) : 0;
    return number_format($size / pow(1024, $power), 2, '.', ',') . '(' . $units[$power] . ')';
}
